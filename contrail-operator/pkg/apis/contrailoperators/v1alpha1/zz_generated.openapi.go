// +build !ignore_autogenerated

// Code generated by openapi-gen. DO NOT EDIT.

// This file was autogenerated by openapi-gen. Do not edit it manually!

package v1alpha1

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.AnalyticsDb":         schema_pkg_apis_contrailoperators_v1alpha1_AnalyticsDb(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.AnalyticsDbSpec":     schema_pkg_apis_contrailoperators_v1alpha1_AnalyticsDbSpec(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.AnalyticsDbStatus":   schema_pkg_apis_contrailoperators_v1alpha1_AnalyticsDbStatus(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.AnalyticsNode":       schema_pkg_apis_contrailoperators_v1alpha1_AnalyticsNode(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.AnalyticsNodeSpec":   schema_pkg_apis_contrailoperators_v1alpha1_AnalyticsNodeSpec(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.AnalyticsNodeStatus": schema_pkg_apis_contrailoperators_v1alpha1_AnalyticsNodeStatus(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.ConfigDb":            schema_pkg_apis_contrailoperators_v1alpha1_ConfigDb(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.ConfigDbSpec":        schema_pkg_apis_contrailoperators_v1alpha1_ConfigDbSpec(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.ConfigDbStatus":      schema_pkg_apis_contrailoperators_v1alpha1_ConfigDbStatus(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.ConfigNode":          schema_pkg_apis_contrailoperators_v1alpha1_ConfigNode(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.ConfigNodeSpec":      schema_pkg_apis_contrailoperators_v1alpha1_ConfigNodeSpec(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.ConfigNodeStatus":    schema_pkg_apis_contrailoperators_v1alpha1_ConfigNodeStatus(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.ControlNode":         schema_pkg_apis_contrailoperators_v1alpha1_ControlNode(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.ControlNodeSpec":     schema_pkg_apis_contrailoperators_v1alpha1_ControlNodeSpec(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.ControlNodeStatus":   schema_pkg_apis_contrailoperators_v1alpha1_ControlNodeStatus(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.InfraVars":           schema_pkg_apis_contrailoperators_v1alpha1_InfraVars(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.InfraVarsSpec":       schema_pkg_apis_contrailoperators_v1alpha1_InfraVarsSpec(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.InfraVarsStatus":     schema_pkg_apis_contrailoperators_v1alpha1_InfraVarsStatus(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.KubeManager":         schema_pkg_apis_contrailoperators_v1alpha1_KubeManager(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.KubeManagerSpec":     schema_pkg_apis_contrailoperators_v1alpha1_KubeManagerSpec(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.KubeManagerStatus":   schema_pkg_apis_contrailoperators_v1alpha1_KubeManagerStatus(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.Vrouter":             schema_pkg_apis_contrailoperators_v1alpha1_Vrouter(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.VrouterSpec":         schema_pkg_apis_contrailoperators_v1alpha1_VrouterSpec(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.VrouterStatus":       schema_pkg_apis_contrailoperators_v1alpha1_VrouterStatus(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.WebUI":               schema_pkg_apis_contrailoperators_v1alpha1_WebUI(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.WebUISpec":           schema_pkg_apis_contrailoperators_v1alpha1_WebUISpec(ref),
		"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.WebUIStatus":         schema_pkg_apis_contrailoperators_v1alpha1_WebUIStatus(ref),
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_AnalyticsDb(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "AnalyticsDb is the Schema for the analyticsdbs API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.AnalyticsDbSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.AnalyticsDbStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.AnalyticsDbSpec", "github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.AnalyticsDbStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_AnalyticsDbSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "AnalyticsDbSpec defines the desired state of AnalyticsDb",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_AnalyticsDbStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "AnalyticsDbStatus defines the observed state of AnalyticsDb",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_AnalyticsNode(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "AnalyticsNode is the Schema for the analyticsnodes API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.AnalyticsNodeSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.AnalyticsNodeStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.AnalyticsNodeSpec", "github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.AnalyticsNodeStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_AnalyticsNodeSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "AnalyticsNodeSpec defines the desired state of AnalyticsNode",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_AnalyticsNodeStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "AnalyticsNodeStatus defines the observed state of AnalyticsNode",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_ConfigDb(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ConfigDb is the Schema for the configdbs API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.ConfigDbSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.ConfigDbStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.ConfigDbSpec", "github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.ConfigDbStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_ConfigDbSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ConfigDbSpec defines the desired state of ConfigDb",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_ConfigDbStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ConfigDbStatus defines the observed state of ConfigDb",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_ConfigNode(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ConfigNode is the Schema for the confignodes API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.ConfigNodeSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.ConfigNodeStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.ConfigNodeSpec", "github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.ConfigNodeStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_ConfigNodeSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ConfigNodeSpec defines the desired state of ConfigNode",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_ConfigNodeStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ConfigNodeStatus defines the observed state of ConfigNode",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_ControlNode(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ControlNode is the Schema for the controlnodes API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.ControlNodeSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.ControlNodeStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.ControlNodeSpec", "github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.ControlNodeStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_ControlNodeSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ControlNodeSpec defines the desired state of ControlNode",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_ControlNodeStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ControlNodeStatus defines the observed state of ControlNode",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_InfraVars(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "InfraVars is the Schema for the infravars API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.InfraVarsSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.InfraVarsStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.InfraVarsSpec", "github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.InfraVarsStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_InfraVarsSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "InfraVarsSpec defines the desired state of InfraVars",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_InfraVarsStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "InfraVarsStatus defines the observed state of InfraVars",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_KubeManager(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "KubeManager is the Schema for the kubemanagers API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.KubeManagerSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.KubeManagerStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.KubeManagerSpec", "github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.KubeManagerStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_KubeManagerSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "KubeManagerSpec defines the desired state of KubeManager",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_KubeManagerStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "KubeManagerStatus defines the observed state of KubeManager",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_Vrouter(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "Vrouter is the Schema for the vrouters API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.VrouterSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.VrouterStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.VrouterSpec", "github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.VrouterStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_VrouterSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "VrouterSpec defines the desired state of Vrouter",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_VrouterStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "VrouterStatus defines the observed state of Vrouter",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_WebUI(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "WebUI is the Schema for the webuis API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.WebUISpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.WebUIStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.WebUISpec", "github.com/operators/contrail-operator/pkg/apis/contrailoperators/v1alpha1.WebUIStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_WebUISpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "WebUISpec defines the desired state of WebUI",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_contrailoperators_v1alpha1_WebUIStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "WebUIStatus defines the observed state of WebUI",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}
